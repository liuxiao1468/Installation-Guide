install NVIDIA GTX1080Ti Driver and CudaTookit 9.1 on Ubuntu 17.10 with computer Alienware Auroa R7

1. install gcc-6 and g++-6 for CUDAtookit 9.1
   if gcc version is 7, remove it and change it into 6
   sudo apt remove gcc-7
   sudo apt install gcc-6
   sudo apt install g++-6
   sudo ln -s /usr/bin/gcc-6 /usr/bin/gcc
   sudo ln -s /usr/bin/g++-6 /usr/bin/g++

3. Download corresponding version of CUDA Toolkit:
   https://developer.nvidia.com/cuda-downloads    target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1704&target_type=runfilelocal

   Must using the runfile one.

4. sudo cp /etc/modprobe.d/blacklist.conf /etc/modprobe.d/blacklist-nouveau.conf
   sudo nano /etc/modprobe.d/blacklist-nouveau.conf
   delete everything and add: 
      blacklist nouveau
      options nouveau modeset=0
   sudo update-initramfs -u

5. restart the computer and in software&updates-additional drivers- Using NVIDIA(newest)
   restart the computer, graphics shows normal
   Installation Instructions:
     repeat 1 step to check gcc version
     cd Downloads 
     sudo sh cuda_9.1.85_387.26_linux.run
=========================================================================
       Do you accept the previously read EULA?
       accept/decline/quit: accept   
       You are attempting to install on an unsupported configuration. 
       Do you wish to continue?
       (y)es/(n)o [ default is no ]: y
       Install NVIDIA Accelerated Graphics Driver for Linux-x86_64 387.26?
       (y)es/(n)o/(q)uit: n
   when well installed, you shall see:
    ===========
    = Summary =
    ===========

    Driver:   Not Selected
    Toolkit:  Installed in /usr/local/cuda-9.1
    Samples:  Installed in /home/leo
==========================================================================
 If samples are not installed, try this:

 sudo apt-get install libglu1-mesa libxi-dev libxmu-dev
 nano ~/.bashrc

 add the following code to .bashrc file: 

 if [ -z $LD_LIBRARY_PATH ]; then
  LD_LIBRARY_PATH=/usr/local/cuda-9.1/lib64:/usr/local/cuda-9.1/lib
else
  LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-9.1/lib64:/usr/local/cuda-9.1/lib
fi
export LD_LIBRARY_PATH



6. Finially instal the graphics drivers
   sudo add-apt-repository ppa:graphics-drivers/ppa
   sudo apt-get update

   sudo ln -s /usr/bin/gcc-6 /usr/local/cuda/bin/gcc
   sudo ln -s /usr/bin/g++-6 /usr/local/cuda/bin/g++

   gedit ~/.profile
    add these to the bottom and save:
    export PATH=/usr/local/cuda-9.1/bin:$PATH
    export LD_LIBRARY_PATH=/usr/local/cuda-9.1/lib64:$LD_LIBRARY_PATH

   restart computer and in software&updates-additional drivers- Using NVIDIA
   restart again   

   nvcc --version 
   you should see:
    ===========================================
    nvcc: NVIDIA (R) Cuda compiler driver
    Copyright (c) 2005-2017 NVIDIA Corporation
    Built on Fri_Nov__3_21:07:56_CDT_2017
    Cuda compilation tools, release 9.1, V9.1.85
    ===========================================

7. Check if Cuda is fully installed:
   cd /usr/local/cuda-9.1/samples
   try "make" ,if make not working, try "sudo make"
   cd /usr/local/cuda-9.1/samples/1_Utilities/deviceQuery
   ./deviceQuery
   you should see:

========================================================================================
 ./deviceQuery Starting...
 CUDA Device Query (Runtime API) version (CUDART static linking)
Detected 1 CUDA Capable device(s)
Device 0: "GeForce GTX 1080 Ti"
  CUDA Driver Version / Runtime Version          9.1 / 9.1
  CUDA Capability Major/Minor version number:    6.1
  Total amount of global memory:                 11170 MBytes (11712987136 bytes)
  (28) Multiprocessors, (128) CUDA Cores/MP:     3584 CUDA Cores
  GPU Max Clock rate:                            1582 MHz (1.58 GHz)
  Memory Clock rate:                             5505 Mhz
  Memory Bus Width:                              352-bit
  L2 Cache Size:                                 2883584 bytes
  Maximum Texture Dimension Size (x,y,z)         1D=(131072), 2D=(131072, 65536), 3D=(16384, 16384, 16384)
  Maximum Layered 1D Texture Size, (num) layers  1D=(32768), 2048 layers
  Maximum Layered 2D Texture Size, (num) layers  2D=(32768, 32768), 2048 layers
  Total amount of constant memory:               65536 bytes
  Total amount of shared memory per block:       49152 bytes
  Total number of registers available per block: 65536
  Warp size:                                     32
  Maximum number of threads per multiprocessor:  2048
  Maximum number of threads per block:           1024
  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)
  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)
  Maximum memory pitch:                          2147483647 bytes
  Texture alignment:                             512 bytes
  Concurrent copy and kernel execution:          Yes with 2 copy engine(s)
  Run time limit on kernels:                     Yes
  Integrated GPU sharing Host Memory:            No
  Support host page-locked memory mapping:       Yes
  Alignment requirement for Surfaces:            Yes
  Device has ECC support:                        Disabled
  Device supports Unified Addressing (UVA):      Yes
  Supports Cooperative Kernel Launch:            Yes
  Supports MultiDevice Co-op Kernel Launch:      Yes
  Device PCI Domain ID / Bus ID / location ID:   0 / 1 / 0
  Compute Mode:
     < Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) >
deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 9.1, CUDA Runtime Version = 9.1, NumDevs = 1
Result = PASS
======================================================================================================

  cd /usr/local/cuda-9.1/samples/1_Utilities/bandwidthTest
  ./bandwidthTest
  you should see:

====================================================================
[CUDA Bandwidth Test] - Starting...
Running on...

 Device 0: GeForce GTX 1080 Ti
 Quick Mode

 Host to Device Bandwidth, 1 Device(s)
 PINNED Memory Transfers
   Transfer Size (Bytes)	Bandwidth(MB/s)
   33554432			6309.5

 Device to Host Bandwidth, 1 Device(s)
 PINNED Memory Transfers
   Transfer Size (Bytes)	Bandwidth(MB/s)
   33554432			6395.2

 Device to Device Bandwidth, 1 Device(s)
 PINNED Memory Transfers
   Transfer Size (Bytes)	Bandwidth(MB/s)
   33554432			344435.0

Result = PASS

NOTE: The CUDA Samples are not meant for performance measurements. Results may vary when GPU Boost is enabled.
=============================================================================================================

Then the Cuda and CudaToolkit 9.1 for NIVIDIA GTX1080Ti is installed correctlly


8. Install cuDNN 7.0 
   go to this page to download "cuDNN v7.0.5 Library for Linux"
   Unzip the cuDNN package and go to the path you unzip the package
   Copy the following files into the CUDA Toolkit directory and then do as follows:
    sudo cp cuda/include/cudnn.h /usr/local/cuda/include
    sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64
    sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*

That's it!


Tensorflow can be installed successfully too 
bazel build --config=opt --cxxopt="-D_GLIBCXX_USE_CXX11_ABI=0" --config=cuda //tensorflow/tools/pip_package:build_pip_package 



opencv can be installed without cuda:

cmake -D CMAKE_BUILD_TYPE=RELEASE \
      -D CMAKE_INSTALL_PREFIX=/usr/local \
      -D INSTALL_PYTHON_EXAMPLES=ON \
      -D INSTALL_C_EXAMPLES=OFF \
      -D WITH_CUDA=OFF \
      -D ENABLE_PRECOMPILED_HEADERS=OFF \
      -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib-3.1.0/modules \
      -D BUILD_EXAMPLES=ON ..


sudo gedit /etc/bash.bashrc

sudo nano /etc/apt/sources.list





